{"version":3,"file":"meowdy.cjs.production.min.js","sources":["../src/cache.ts","../src/math/median.ts"],"sourcesContent":["export default class Cache<K, T> {\n  __cache = new Map<K, T>();\n  constructor() {\n    this.__cache = new Map();\n  }\n\n  getOrInsert(key: K, insertWith: (key: K) => T): T {\n    const value = this.__cache.get(key);\n    if (value !== undefined) {\n      return value;\n    }\n\n    const newValue = insertWith(key);\n    this.__cache.set(key, newValue);\n    return newValue;\n  }\n}\n","export default function median(values: number[]): number | null {\n  if (values.length === 0) {\n    return null;\n  }\n\n  const sorted = values.slice().sort((a, b) => a - b);\n  const middle = Math.floor(sorted.length / 2);\n\n  if (sorted.length % 2 === 0) {\n    // If even number of items, return average of the two middle numbers\n    return (sorted[middle - 1] + sorted[middle]) / 2;\n  } else {\n    // If odd number of items, return the middle number\n    return sorted[middle];\n  }\n}\n"],"names":["Cache","this","Map","__cache","prototype","getOrInsert","key","insertWith","value","get","undefined","newValue","set","values","length","sorted","slice","sort","a","b","middle","Math","floor"],"mappings":"6FAEE,SAAAA,IADAC,aAAU,IAAIC,IAEZD,KAAKE,QAAU,IAAID,IAYpB,OAXAF,EAAAI,UAEDC,YAAA,SAAYC,EAAQC,GAClB,IAAMC,EAAQP,KAAKE,QAAQM,IAAIH,GAC/B,QAAcI,IAAVF,EACF,OAAOA,EAGT,IAAMG,EAAWJ,EAAWD,GAE5B,OADAL,KAAKE,QAAQS,IAAIN,EAAKK,GACfA,GACRX,6BCf4Ba,GAC7B,GAAsB,IAAlBA,EAAOC,OACT,OAAO,KAGT,IAAMC,EAASF,EAAOG,QAAQC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,KAC3CC,EAASC,KAAKC,MAAMP,EAAOD,OAAS,GAE1C,OAAIC,EAAOD,OAAS,GAAM,GAEhBC,EAAOK,EAAS,GAAKL,EAAOK,IAAW,EAGxCL,EAAOK"}